{"version":3,"file":"src_app_features_post_post-list_post-list_module_ts.js","mappings":"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","sources":["./src/app/features/post/post-list/components/filter/container/post-list-filter-container.component.ts","./src/app/features/post/post-list/components/filter/container/post-list-filter-container.component.html","./src/app/features/post/post-list/components/filter/post-list-filter.component.ts","./src/app/features/post/post-list/components/filter/post-list-filter.component.html","./src/app/features/post/post-list/components/page/post-list-page.component.ts","./src/app/features/post/post-list/components/page/post-list-page.component.html","./src/app/features/post/post-list/components/table/post-list-table.component.ts","./src/app/features/post/post-list/components/table/post-list-table.component.html","./src/app/features/post/post-list/ngrx-store/post-list.reducer.ts","./src/app/features/post/post-list/ngrx-store/post-list.selectors.ts","./src/app/features/post/post-list/ngrx-store/user-list.reducer.ts","./src/app/features/post/post-list/post-list-routing.module.ts","./src/app/features/post/post-list/post-list.module.ts","./node_modules/rxjs/dist/esm/internal/firstValueFrom.js","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { firstValueFrom, Observable } from 'rxjs';\nimport { User } from '../../../../../../core/types/models/user';\nimport { selectPostListRequest, selectUserList } from '../../../ngrx-store/post-list.selectors';\nimport { select, Store } from '@ngrx/store';\nimport { State } from '../../../../../../core/ngrx-store/reducers';\nimport { PageRequestFilterField } from '../../../../../../core/types/pagination/page-request';\nimport * as postActions from '../../../../../../core/ngrx-store/actions/post.actions';\n\n@Component({\n  selector: 'app-post-list-filter-container',\n  templateUrl: './post-list-filter-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PostListFilterContainerComponent {\n  users$: Observable<User[]> = this.store.pipe(select(selectUserList));\n\n  constructor(private store: Store<State>) {}\n\n  async changeFilter(filter: PageRequestFilterField[]): Promise<void> {\n    const currentListRequest = await firstValueFrom(this.store.pipe(select(selectPostListRequest)));\n\n    this.store.dispatch(\n      new postActions.GetPosts({\n        ...currentListRequest,\n        page: {\n          number: 1,\n          size: currentListRequest.page!.size,\n        },\n        filter,\n      }),\n    );\n  }\n}\n","<app-post-list-filter\r\n  [users]=\"(users$ | async)!\"\r\n  (changeFilter)=\"changeFilter($event)\"\r\n></app-post-list-filter>\r\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  EventEmitter,\n  Output,\n  OnInit,\n} from '@angular/core';\nimport { User } from '../../../../../core/types/models/user';\nimport { PageRequestFilterField } from '../../../../../core/types/pagination/page-request';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { throttleTime, asyncScheduler } from 'rxjs';\n\n@UntilDestroy()\n@Component({\n  selector: 'app-post-list-filter',\n  templateUrl: './post-list-filter.component.html',\n  styleUrls: ['./post-list-filter.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PostListFilterComponent implements OnInit {\n  @Input() users: User[] = [];\n\n  @Output() changeFilter = new EventEmitter<PageRequestFilterField[]>();\n\n  group = new FormGroup({\n    q: new FormControl(''),\n    userId: new FormControl('0'),\n  });\n\n  ngOnInit(): void {\n    this.group.valueChanges\n      .pipe(throttleTime(1000, asyncScheduler, { trailing: true }), untilDestroyed(this))\n      .subscribe((value) => {\n        const filter: PageRequestFilterField[] = [];\n        if (value.q) {\n          filter.push({\n            field: 'q',\n            value: value.q,\n          });\n        }\n        if (value.userId !== '0') {\n          filter.push({\n            field: 'userId',\n            value: value.userId,\n          });\n        }\n        this.changeFilter.emit(filter);\n      });\n  }\n\n  trackByUser(index: number, user: User): number {\n    return user.id;\n  }\n}\n","<form class=\"d-flex\" [formGroup]=\"group\">\r\n  <input formControlName=\"q\" class=\"form-control me-2\" placeholder=\"Search\">\r\n  <select formControlName=\"userId\" class=\"form-select\" aria-label=\"User filter\">\r\n    <option [value]=\"0\">User</option>\r\n    <option [value]=\"user.id\" *ngFor=\"let user of users; trackBy: trackByUser\">{{user.name}}</option>\r\n  </select>\r\n</form>\r\n","import { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { Breadcrumb } from '../../../../../shared/components/breadcrumbs/breadcrumbs.component';\nimport { select, Store } from '@ngrx/store';\nimport * as postActions from '../../../../../core/ngrx-store/actions/post.actions';\nimport { State } from '../../../../../core/ngrx-store/reducers';\nimport {\n  selectPostListItems,\n  selectPostListTotalCount,\n  selectPostListRequest,\n} from '../../ngrx-store/post-list.selectors';\nimport { firstValueFrom, Observable } from 'rxjs';\nimport { Post } from '../../../../../core/types/models/post';\nimport * as userActions from '../../../../../core/ngrx-store/actions/user.actions';\nimport {\n  PageRequest,\n  PageRequestSortField,\n} from '../../../../../core/types/pagination/page-request';\nimport { selectIsActionInProcess } from '../../../../../core/ngrx-store/selectors/current-actions.selectors';\nimport { GET_POSTS } from '../../../../../core/ngrx-store/actions/post.actions';\n\n@Component({\n  selector: 'app-post-list-page',\n  templateUrl: './post-list-page.component.html',\n  styleUrls: ['./post-list-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PostListPageComponent implements OnInit {\n  breadcrumbs: Breadcrumb[] = [\n    {\n      link: '',\n      text: 'Dashboard',\n    },\n    {\n      link: null,\n      text: 'Posts',\n    },\n  ];\n\n  totalCount$: Observable<number> = this.store.pipe(select(selectPostListTotalCount));\n\n  items$: Observable<Post[]> = this.store.pipe(select(selectPostListItems));\n\n  currentListRequest$: Observable<PageRequest> = this.store.pipe(select(selectPostListRequest));\n\n  loadInProcess$: Observable<boolean> = this.store.pipe(select(selectIsActionInProcess(GET_POSTS)));\n\n  constructor(private store: Store<State>) {}\n\n  ngOnInit(): void {\n    this.store.dispatch(\n      new postActions.GetPosts({\n        page: {\n          number: 1,\n          size: 5,\n        },\n        sort: {\n          field: 'id',\n          direction: 'asc',\n        },\n      }),\n    );\n    this.store.dispatch(new userActions.GetUsers());\n  }\n\n  async onPageChange(pageNumber: number): Promise<void> {\n    const currentListRequest = await firstValueFrom(this.currentListRequest$);\n\n    this.store.dispatch(\n      new postActions.GetPosts({\n        ...currentListRequest,\n        page: {\n          number: pageNumber,\n          size: currentListRequest.page?.size || 0,\n        },\n      }),\n    );\n  }\n\n  async onSort(sort: PageRequestSortField): Promise<void> {\n    const currentListRequest = await firstValueFrom(this.currentListRequest$);\n\n    this.store.dispatch(\n      new postActions.GetPosts({\n        ...currentListRequest,\n        sort,\n      }),\n    );\n  }\n}\n","<div class=\"container pt-3\">\r\n  <app-breadcrumbs [items]=\"breadcrumbs\"></app-breadcrumbs>\r\n  <h2>Posts</h2>\r\n\r\n  <app-post-list-filter-container class=\"d-block mb-2\"></app-post-list-filter-container>\r\n\r\n  <app-post-list-table\r\n    [loadInProcess]=\"(loadInProcess$ | async)!\"\r\n    [items]=\"(items$ | async)!\"\r\n    [totalCount]=\"(totalCount$ | async)!\"\r\n    [listRequest]=\"(currentListRequest$ | async)!\"\r\n    (sort)=\"onSort($event)\"\r\n    (pageChange)=\"onPageChange($event)\"\r\n  ></app-post-list-table>\r\n</div>\r\n","import { Component, ChangeDetectionStrategy, Input, EventEmitter, Output } from '@angular/core';\nimport { faSortDown, faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { Post } from '../../../../../core/types/models/post';\nimport {\n  PageRequest,\n  PageRequestSortField,\n} from '../../../../../core/types/pagination/page-request';\n\n@Component({\n  selector: 'app-post-list-table',\n  templateUrl: './post-list-table.component.html',\n  styleUrls: ['./post-list-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PostListTableComponent {\n  faSortUp = faSortUp;\n\n  faSortDown = faSortDown;\n\n  columns: { id: string; title: string }[] = [\n    {\n      id: 'id',\n      title: 'ID',\n    },\n    {\n      id: 'userId',\n      title: 'User',\n    },\n    {\n      id: 'title',\n      title: 'Title',\n    },\n    {\n      id: 'body',\n      title: 'Content',\n    },\n  ];\n\n  @Input() items: Post[] = [];\n\n  @Input() listRequest: PageRequest = {};\n\n  @Input() loadInProcess = true;\n\n  @Input() totalCount = 0;\n\n  @Output() sort = new EventEmitter<PageRequestSortField>();\n\n  @Output() pageChange = new EventEmitter<number>();\n\n  sortBy(colId: string): void {\n    if (this.listRequest.sort?.field === colId) {\n      this.sort.emit({\n        field: this.listRequest.sort.field,\n        direction: this.listRequest.sort.direction === 'asc' ? 'desc' : 'asc',\n      });\n    } else {\n      this.sort.emit({\n        field: colId,\n        direction: 'asc',\n      });\n    }\n  }\n}\n","<app-content-loading-status\r\n  [isEmpty]=\"!items.length\"\r\n  [isLoading]=\"loadInProcess\"\r\n></app-content-loading-status>\r\n\r\n<ng-container *ngIf=\"items.length\">\r\n  <table class=\"table table-bordered\">\r\n    <thead>\r\n    <tr>\r\n      <th scope=\"col\" *ngFor=\"let col of columns\" (click)=\"sortBy(col.id)\">\r\n        {{col.title}}\r\n        <ng-container *ngIf=\"listRequest.sort?.field === col.id\">\r\n          <fa-icon [icon]=\"listRequest.sort?.direction === 'asc' ? faSortUp : faSortDown\" [fixedWidth]=\"true\"></fa-icon>\r\n        </ng-container>\r\n      </th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr *ngFor=\"let item of items\">\r\n      <th scope=\"row\" class=\"fw-normal\">{{item.id}}</th>\r\n      <td><ng-container *ngIf=\"item.user\"><a [routerLink]=\"['/', 'user', item.user.id]\">{{item.user.name}}</a></ng-container></td>\r\n      <td><a [routerLink]=\"['/', 'post', item.id]\">{{item.title}}</a></td>\r\n      <td>{{item.body}}</td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n  <ngb-pagination\r\n    class=\"d-flex justify-content-center\"\r\n    [page]=\"listRequest.page?.number || 1\"\r\n    [pageSize]=\"listRequest.page?.size || 0\"\r\n    [collectionSize]=\"totalCount\"\r\n    (pageChange)=\"pageChange.emit($event)\">\r\n    <ng-template ngbPaginationPrevious>Prev</ng-template>\r\n    <ng-template ngbPaginationNext>Next</ng-template>\r\n  </ngb-pagination>\r\n</ng-container>\r\n\r\n","import * as postActions from '../../../../core/ngrx-store/actions/post.actions';\nimport { PageResult } from '../../../../core/types/pagination/page-result';\nimport { GetPostsSuccess } from '../../../../core/ngrx-store/actions/post.actions';\nimport { Action } from '@ngrx/store';\n\nexport const postListFeatureKey = 'postList';\n\nexport type PostListState = PageResult<number>;\n\nexport const postListInitialState: PostListState = {\n  pageRequest: {},\n  totalCount: 0,\n  items: [],\n};\n\n// eslint-disable-next-line @typescript-eslint/default-param-last\nexport function reducer(state = postListInitialState, action: Action): PostListState {\n  switch (action.type) {\n    case postActions.GET_POSTS_SUCCESS:\n      const getPostsSuccessAction = action as GetPostsSuccess;\n\n      return getPostsSuccessAction.data.result;\n\n    default:\n      return state;\n  }\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { postListFeatureKey, PostListState } from './post-list.reducer';\nimport { selectEntities } from '../../../../core/ngrx-store/selectors/entities.selectors';\nimport { Post } from '../../../../core/types/models/post';\nimport { denormalize } from 'normalizr';\nimport { postSchema } from '../../../../core/normalizr/schemas/post-schema';\nimport { PageRequest } from '../../../../core/types/pagination/page-request';\nimport { userListFeatureKey, UserListState } from './user-list.reducer';\nimport { User } from '../../../../core/types/models/user';\nimport { userSchema } from '../../../../core/normalizr/schemas/user-schema';\n\nexport const selectPostListState = createFeatureSelector<PostListState>(postListFeatureKey);\n\nexport const selectPostListItems = createSelector(\n  selectPostListState,\n  selectEntities,\n  (state, entities): Post[] => {\n    return denormalize(state.items, [postSchema], entities);\n  },\n);\n\nexport const selectPostListRequest = createSelector(selectPostListState, (state): PageRequest => {\n  return state.pageRequest;\n});\n\nexport const selectPostListTotalCount = createSelector(selectPostListState, (state): number => {\n  return state.totalCount;\n});\n\nexport const selectUserListState = createFeatureSelector<UserListState>(userListFeatureKey);\n\nexport const selectUserList = createSelector(\n  selectUserListState,\n  selectEntities,\n  (state, entities): User[] => {\n    return denormalize(state, [userSchema], entities);\n  },\n);\n","import * as userActions from '../../../../core/ngrx-store/actions/user.actions';\nimport { GetUsersSuccess } from '../../../../core/ngrx-store/actions/user.actions';\nimport { Action } from '@ngrx/store';\n\nexport const userListFeatureKey = 'userList';\n\nexport type UserListState = number[];\n\nexport const initialState: UserListState = [];\n\n// eslint-disable-next-line @typescript-eslint/default-param-last\nexport function reducer(state = initialState, action: Action): UserListState {\n  switch (action.type) {\n    case userActions.GET_USERS_SUCCESS:\n      const getUsersSuccessAction = action as GetUsersSuccess;\n\n      return getUsersSuccessAction.data.result.items;\n\n    default:\n      return state;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PostListPageComponent } from './components/page/post-list-page.component';\n\nconst routes: Routes = [{ path: '', component: PostListPageComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PostListRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PostListRoutingModule } from './post-list-routing.module';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { PostListFilterComponent } from './components/filter/post-list-filter.component';\nimport { PostListFilterContainerComponent } from './components/filter/container/post-list-filter-container.component';\nimport { PostListPageComponent } from './components/page/post-list-page.component';\nimport { PostListTableComponent } from './components/table/post-list-table.component';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromPostList from './ngrx-store/post-list.reducer';\nimport * as fromUserList from './ngrx-store/user-list.reducer';\n\n@NgModule({\n  declarations: [\n    PostListFilterComponent,\n    PostListFilterContainerComponent,\n    PostListPageComponent,\n    PostListTableComponent,\n  ],\n  imports: [\n    CommonModule,\n    PostListRoutingModule,\n    SharedModule,\n    StoreModule.forFeature(fromPostList.postListFeatureKey, fromPostList.reducer),\n    StoreModule.forFeature(fromUserList.userListFeatureKey, fromUserList.reducer),\n  ],\n})\nexport class PostListModule {}\n","import { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\nexport function firstValueFrom(source, config) {\n    const hasConfig = typeof config === 'object';\n    return new Promise((resolve, reject) => {\n        const subscriber = new SafeSubscriber({\n            next: (value) => {\n                resolve(value);\n                subscriber.unsubscribe();\n            },\n            error: reject,\n            complete: () => {\n                if (hasConfig) {\n                    resolve(config.defaultValue);\n                }\n                else {\n                    reject(new EmptyError());\n                }\n            },\n        });\n        source.subscribe(subscriber);\n    });\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["firstValueFrom","selectPostListRequest","selectUserList","select","postActions","PostListFilterContainerComponent","constructor","store","pipe","changeFilter","filter","currentListRequest","dispatch","GetPosts","Object","page","number","size","i0","selectors","decls","vars","consts","template","ctx","EventEmitter","FormControl","FormGroup","UntilDestroy","untilDestroyed","throttleTime","asyncScheduler","PostListFilterComponent","q","userId","ngOnInit","group","valueChanges","trailing","subscribe","value","push","field","emit","trackByUser","index","user","id","inputs","users","outputs","selectPostListItems","selectPostListTotalCount","userActions","selectIsActionInProcess","GET_POSTS","PostListPageComponent","link","text","sort","direction","GetUsers","onPageChange","pageNumber","currentListRequest$","_a","onSort"],"sourceRoot":"webpack:///"}