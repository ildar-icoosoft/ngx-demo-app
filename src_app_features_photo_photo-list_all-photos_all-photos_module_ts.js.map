{"version":3,"file":"src_app_features_photo_photo-list_all-photos_all-photos_module_ts.js","mappings":"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","sources":["./src/app/features/photo/photo-list/akita-state/photo-list-albums.query.ts","./src/app/features/photo/photo-list/all-photos/all-photos-routing.module.ts","./src/app/features/photo/photo-list/all-photos/all-photos.module.ts","./src/app/features/photo/photo-list/all-photos/components/filter/all-photos-filter.component.ts","./src/app/features/photo/photo-list/all-photos/components/filter/all-photos-filter.component.html","./src/app/features/photo/photo-list/all-photos/components/filter/container/all-photos-filter-container.component.ts","./src/app/features/photo/photo-list/all-photos/components/filter/container/all-photos-filter-container.component.html","./src/app/features/photo/photo-list/all-photos/components/page/all-photos-page.component.ts","./src/app/features/photo/photo-list/all-photos/components/page/all-photos-page.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { PhotoListAlbumsStore, PhotoListAlbumsState } from './photo-list-albums.store';\n\n@Injectable({ providedIn: 'root' })\nexport class PhotoListAlbumsQuery extends QueryEntity<PhotoListAlbumsState> {\n  constructor(protected override store: PhotoListAlbumsStore) {\n    super(store);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AllPhotosPageComponent } from './components/page/all-photos-page.component';\n\nconst routes: Routes = [{ path: '', component: AllPhotosPageComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AllPhotosRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AllPhotosRoutingModule } from './all-photos-routing.module';\nimport { AllPhotosPageComponent } from './components/page/all-photos-page.component';\nimport { AllPhotosFilterContainerComponent } from './components/filter/container/all-photos-filter-container.component';\nimport { AllPhotosFilterComponent } from './components/filter/all-photos-filter.component';\nimport { SharedModule } from '../../../../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AllPhotosPageComponent,\n    AllPhotosFilterContainerComponent,\n    AllPhotosFilterComponent,\n  ],\n  imports: [CommonModule, AllPhotosRoutingModule, SharedModule],\n})\nexport class AllPhotosModule {}\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { PageRequestFilterField } from '../../../../../../core/types/pagination/page-request';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { asyncScheduler, throttleTime } from 'rxjs';\nimport { NormalizedAlbumEntity } from '../../../../../../core/normalizr/types/models/normalized-album-entity';\n\n@UntilDestroy()\n@Component({\n  selector: 'app-all-photos-filter',\n  templateUrl: './all-photos-filter.component.html',\n  styleUrls: ['./all-photos-filter.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AllPhotosFilterComponent implements OnInit {\n  @Input() albums: NormalizedAlbumEntity[] = [];\n\n  @Output() changeFilter = new EventEmitter<PageRequestFilterField[]>();\n\n  group = new FormGroup({\n    q: new FormControl(''),\n    albumId: new FormControl('0'),\n  });\n\n  ngOnInit(): void {\n    this.group.valueChanges\n      .pipe(throttleTime(1000, asyncScheduler, { trailing: true }), untilDestroyed(this))\n      .subscribe((value) => {\n        const filter: PageRequestFilterField[] = [];\n        if (value.q) {\n          filter.push({\n            field: 'q',\n            value: value.q,\n          });\n        }\n        if (value.albumId !== '0') {\n          filter.push({\n            field: 'albumId',\n            value: value.albumId,\n          });\n        }\n        this.changeFilter.emit(filter);\n      });\n  }\n\n  trackByAlbum(index: number, album: NormalizedAlbumEntity): number {\n    return album.id;\n  }\n}\n","<form class=\"d-flex\" [formGroup]=\"group\">\n  <input formControlName=\"q\" class=\"form-control me-2\" placeholder=\"Search\">\n  <select formControlName=\"albumId\" class=\"form-select\" aria-label=\"Album filter\">\n    <option [value]=\"0\">Album</option>\n    <option [value]=\"album.id\" *ngFor=\"let album of albums; trackBy: trackByAlbum\">{{album.title}}</option>\n  </select>\n</form>\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { NormalizedAlbumEntity } from '../../../../../../../core/normalizr/types/models/normalized-album-entity';\nimport { PhotoListAlbumsQuery } from '../../../../akita-state/photo-list-albums.query';\nimport { PageRequestFilterField } from '../../../../../../../core/types/pagination/page-request';\nimport { PhotoListService } from '../../../../akita-state/photo-list.service';\n\n@Component({\n  selector: 'app-all-photos-filter-container',\n  templateUrl: './all-photos-filter-container.component.html',\n  styleUrls: ['./all-photos-filter-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AllPhotosFilterContainerComponent {\n  albums$: Observable<NormalizedAlbumEntity[]> = this.albumsQuery.selectAll();\n\n  constructor(private albumsQuery: PhotoListAlbumsQuery, private photosService: PhotoListService) {}\n\n  changeFilter(filter: PageRequestFilterField[]): void {\n    this.photosService.updateFilter(filter);\n  }\n}\n","<app-all-photos-filter\n  [albums]=\"(albums$ | async)!\"\n  (changeFilter)=\"changeFilter($event)\"\n></app-all-photos-filter>\n","import { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { Breadcrumb } from '../../../../../../shared/components/breadcrumbs/breadcrumbs.component';\nimport { Observable } from 'rxjs';\nimport { PhotoListService } from '../../../akita-state/photo-list.service';\nimport { PhotoListQuery } from '../../../akita-state/photo-list.query';\nimport { NormalizedPhotoEntity } from '../../../../../../core/normalizr/types/models/normalized-photo-entity';\nimport { NormalizedAlbumEntity } from '../../../../../../core/normalizr/types/models/normalized-album-entity';\nimport { HashMap } from '../../../../../../core/types/hash-map';\nimport { PhotoListAlbumsQuery } from '../../../akita-state/photo-list-albums.query';\n\n@Component({\n  selector: 'app-all-photos-page',\n  templateUrl: './all-photos-page.component.html',\n  styleUrls: ['./all-photos-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AllPhotosPageComponent implements OnInit {\n  breadcrumbs: Breadcrumb[] = [\n    {\n      link: '',\n      text: 'Dashboard',\n    },\n    {\n      link: null,\n      text: 'Photos',\n    },\n  ];\n\n  photos$: Observable<NormalizedPhotoEntity[]> = this.photosQuery.selectAll();\n\n  albumsHashMap$: Observable<HashMap<NormalizedAlbumEntity>> = this.albumsQuery.selectAll({\n    asObject: true,\n  });\n\n  isLastPage$: Observable<boolean> = this.photosQuery.isLastPage();\n\n  loadInProcess$: Observable<boolean> = this.photosQuery.selectLoading();\n\n  constructor(\n    private photosService: PhotoListService,\n    private photosQuery: PhotoListQuery,\n    private albumsQuery: PhotoListAlbumsQuery,\n  ) {}\n\n  ngOnInit(): void {\n    this.photosService.getPhotos({\n      page: {\n        number: 1,\n        size: 36,\n      },\n    });\n    this.photosService.getAlbums({});\n  }\n\n  loadMore(): void {\n    this.photosService.getNextPhotos();\n  }\n}\n","<div class=\"container pt-3\">\n  <app-breadcrumbs [items]=\"breadcrumbs\"></app-breadcrumbs>\n  <h2>Photos</h2>\n\n  <app-all-photos-filter-container class=\"d-block mb-2\"></app-all-photos-filter-container>\n\n  <app-photo-list\n    [photos]=\"(photos$ | async)!\"\n    [albums]=\"(albumsHashMap$ | async)!\"\n    [isLastPage]=\"(isLastPage$ | async)!\"\n    [loadInProcess]=\"(loadInProcess$ | async)!\"\n    (loadMore)=\"loadMore()\"\n  ></app-photo-list>\n</div>\n"],"names":["EventEmitter","UntilDestroy","untilDestroyed","FormControl","FormGroup","asyncScheduler","throttleTime","i0","AllPhotosFilterComponent","q","albumId","ngOnInit","group","valueChanges","pipe","trailing","subscribe","value","filter","push","field","changeFilter","emit","trackByAlbum","index","album","id","selectors","inputs","albums","outputs","decls","vars","consts","template","ctx","AllPhotosFilterContainerComponent","constructor","albumsQuery","photosService","selectAll","updateFilter","AllPhotosPageComponent","photosQuery","link","text","asObject","isLastPage","selectLoading","getPhotos","page","number","size","getAlbums","loadMore","getNextPhotos"],"sourceRoot":"webpack:///"}